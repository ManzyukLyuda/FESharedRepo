// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$-f-b-icon-name: 'FBIcon';
$-f-b-icon-x: 0px;
$-f-b-icon-y: 74px;
$-f-b-icon-offset-x: 0px;
$-f-b-icon-offset-y: -74px;
$-f-b-icon-width: 10px;
$-f-b-icon-height: 21px;
$-f-b-icon-total-width: 104px;
$-f-b-icon-total-height: 95px;
$-f-b-icon-image: '../img/sprite.png';
$-f-b-icon: (0px, 74px, 0px, -74px, 10px, 21px, 104px, 95px, '../img/sprite.png', 'FBIcon', );
$-google-plus-icon-name: 'GooglePlusIcon';
$-google-plus-icon-x: 37px;
$-google-plus-icon-y: 37px;
$-google-plus-icon-offset-x: -37px;
$-google-plus-icon-offset-y: -37px;
$-google-plus-icon-width: 20px;
$-google-plus-icon-height: 21px;
$-google-plus-icon-total-width: 104px;
$-google-plus-icon-total-height: 95px;
$-google-plus-icon-image: '../img/sprite.png';
$-google-plus-icon: (37px, 37px, -37px, -37px, 20px, 21px, 104px, 95px, '../img/sprite.png', 'GooglePlusIcon', );
$-instagram-icon-name: 'InstagramIcon';
$-instagram-icon-x: 84px;
$-instagram-icon-y: 37px;
$-instagram-icon-offset-x: -84px;
$-instagram-icon-offset-y: -37px;
$-instagram-icon-width: 19px;
$-instagram-icon-height: 20px;
$-instagram-icon-total-width: 104px;
$-instagram-icon-total-height: 95px;
$-instagram-icon-image: '../img/sprite.png';
$-instagram-icon: (84px, 37px, -84px, -37px, 19px, 20px, 104px, 95px, '../img/sprite.png', 'InstagramIcon', );
$-pinterest-icon-name: 'PinterestIcon';
$-pinterest-icon-x: 0px;
$-pinterest-icon-y: 37px;
$-pinterest-icon-offset-x: 0px;
$-pinterest-icon-offset-y: -37px;
$-pinterest-icon-width: 21px;
$-pinterest-icon-height: 21px;
$-pinterest-icon-total-width: 104px;
$-pinterest-icon-total-height: 95px;
$-pinterest-icon-image: '../img/sprite.png';
$-pinterest-icon: (0px, 37px, 0px, -37px, 21px, 21px, 104px, 95px, '../img/sprite.png', 'PinterestIcon', );
$-r-s-s-icon-name: 'RSSIcon';
$-r-s-s-icon-x: 84px;
$-r-s-s-icon-y: 0px;
$-r-s-s-icon-offset-x: -84px;
$-r-s-s-icon-offset-y: 0px;
$-r-s-s-icon-width: 20px;
$-r-s-s-icon-height: 21px;
$-r-s-s-icon-total-width: 104px;
$-r-s-s-icon-total-height: 95px;
$-r-s-s-icon-image: '../img/sprite.png';
$-r-s-s-icon: (84px, 0px, -84px, 0px, 20px, 21px, 104px, 95px, '../img/sprite.png', 'RSSIcon', );
$-stumbleupon-icon-name: 'StumbleuponIcon';
$-stumbleupon-icon-x: 0px;
$-stumbleupon-icon-y: 0px;
$-stumbleupon-icon-offset-x: 0px;
$-stumbleupon-icon-offset-y: 0px;
$-stumbleupon-icon-width: 27px;
$-stumbleupon-icon-height: 21px;
$-stumbleupon-icon-total-width: 104px;
$-stumbleupon-icon-total-height: 95px;
$-stumbleupon-icon-image: '../img/sprite.png';
$-stumbleupon-icon: (0px, 0px, 0px, 0px, 27px, 21px, 104px, 95px, '../img/sprite.png', 'StumbleuponIcon', );
$-twitter-icon-name: 'TwitterIcon';
$-twitter-icon-x: 43px;
$-twitter-icon-y: 0px;
$-twitter-icon-offset-x: -43px;
$-twitter-icon-offset-y: 0px;
$-twitter-icon-width: 25px;
$-twitter-icon-height: 21px;
$-twitter-icon-total-width: 104px;
$-twitter-icon-total-height: 95px;
$-twitter-icon-image: '../img/sprite.png';
$-twitter-icon: (43px, 0px, -43px, 0px, 25px, 21px, 104px, 95px, '../img/sprite.png', 'TwitterIcon', );
$spritesheet-width: 104px;
$spritesheet-height: 95px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($-f-b-icon, $-google-plus-icon, $-instagram-icon, $-pinterest-icon, $-r-s-s-icon, $-stumbleupon-icon, $-twitter-icon, );
$spritesheet: (104px, 95px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
